#!/usr/bin/env python
import click
import os
from opentutor_classifier.svm import train_data_root
from opentutor_classifier.sync import sync as _sync


@click.group()
def cli():
    pass


@cli.command()
@click.option("-p", "--data", required=False, type=click.Path(exists=True))
@click.option("-s", "--shared", required=False, type=click.Path(exists=True))
@click.option("-o", "--output", required=False, type=click.Path(exists=False))
def train(data: str, shared: str, output: str):
    # training = SVMAnswerClassifierTraining(shared_root=shared)
    result = train_data_root(data_root=data, shared_root=shared, output_dir=output)
    print("Models are saved at: " + output)
    for exp_num, exp_result in enumerate(result.expectations):
        print(f"Accuracy for model={exp_num} is {exp_result.accuracy}.")


@cli.command()
@click.option("-p", "--data", required=False, type=click.Path(exists=True))
@click.option("-s", "--shared", required=False, type=click.Path(exists=True))
@click.option("-o", "--output", required=False, type=click.Path(exists=False))
def traindefault(data: str, shared: str, output: str):
    training = SVMAnswerClassifierTraining(shared_root=shared)
    accuracy = training.default_train_all(data_root=data, output_dir=output)
    print("Models are saved at: " + output)
    print(f"Accuracy for model is {accuracy}")


@cli.command()
@click.option("-p", "--lesson", required=True)
@click.option("-s", "--url", required=True)
@click.option("-o", "--output", required=False)
def sync(lesson: str, url: str, output: str):
    data_path = os.path.join(output, lesson)
    _sync(lesson, url, data_path)
    print(f"Data is saved at: {data_path}")


cli.add_command(train)
cli.add_command(traindefault)
cli.add_command(sync)

if __name__ == "__main__":
    cli()
